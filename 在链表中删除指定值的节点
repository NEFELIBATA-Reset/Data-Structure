/*
题目描述
给出一个链表和一个整数 num，输出删除链表中节点值等于 num 的节点之后的链表。
输入描述:
第一行一个整数 n，n 表示单链表的节点数量。
第二行 n 个整数表示单链表的各个节点的值。
第三行一个整数 num。
输出描述:
在给定的函数中返回指定链表的头指针。
示例1
输入
4 
1 2 3 4
3
输出
1 2 4



基本思路：
1、首先将所有节点值存在数组中，然后再根据循环放入链表
2、写一个删除指定元素的方法
3、打印
*/
import java.util.*;
class ListNode{
    int val;
    ListNode next;
    ListNode(int val){
        this.val=val;
    }
}

public class Main{
    
    public static void main(String[] args){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        int[] a=new int[n];
        for(int i=0;i<n;i++){
            a[i]=sc.nextInt();
        }
        ListNode head=new ListNode(a[0]);
        ListNode cur=head;
        for(int i=1;i<n;i++){
            cur.next=new ListNode(a[i]);
            cur=cur.next;
        }
        cur.next=null;
        int val=sc.nextInt();
        ListNode node=removeElements(head,val);
        printList(node);
    }
    public static void printList(ListNode head){
        while(head!=null){
            System.out.print(head.val+" ");
            head=head.next;
        }
    }
    public static ListNode removeElements(ListNode head,int val){
        if(head==null){
            return head;
        }
        ListNode cur=head;
        ListNode res=null;
        while(cur!=null){
            if(cur.val==val){
                if(cur==head){
                    head=head.next;
                }else{
                    res.next=cur.next;
                }
            }else{
                res=cur;
            }
            cur=cur.next;
        }
        return head;
    }
}
